#!/bin/bash
### BEGIN INIT INFO
# Provides: bamboo
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start up Bamboo
# Description:       Atlassian Bamboo
#                    This service starts up the tomcat webapp.
### END INIT INFO
ACTION=$1
SERVICE=bamboo
USER=<%= @user %>
SHELL=<%= @shell %>
export JAVA_HOME=<%= @java_home %>
export CATALINA_HOME=<%= @appdir %>
SHUTDOWN_WAIT=<%= @shutdown_wait %>

if [ -f /etc/sysconfig/bamboo ]; then
    . /etc/sysconfig/bamboo
fi

function restart() {
  stop
  start
}

function bamboo_pid() {
  echo $(ps -ef |grep $CATALINA_HOME |grep -v grep | tr -s " " | cut -d " " -f2)
}

function terminate() {
  echo "Terminating ${SERVICE} with pid $(bamboo_pid)"
  kill -9 $(bamboo_pid)
}

function stop() {
  pid=$(bamboo_pid)
  if [ -n "$pid" ]; then
    echo -n $"Stopping down $SERVICE: "
    /bin/su -s $SHELL -m $USER -c "<%= @appdir %>/bin/stop-bamboo.sh"

    echo -n "Waiting ${SHUTDOWN_WAIT} seconds for processes to exit "
    let kwait=$SHUTDOWN_WAIT
    count=0;
    until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $kwait ]; do
      sleep 1
      let count=$count+1
      echo -n "${count}.."
    done
    echo

    if [ $count -gt $kwait ]; then
      echo "Stopping ${SERVICE} was unsuccessful after ${SHUTDOWN_WAIT} seconds; killing"
      terminate
    fi
  else
    echo "${SERVICE} is not running"
    exit 1
  fi

  return 0
}

function start() {
  pid=$(bamboo_pid)
  if [ -n "$pid" ]; then
    echo "${SERVICE} is already running with pid ${pid}"
    exit 1
  else
    echo -n $"Starting $SERVICE: "
    /bin/su -s $SHELL -m $USER -c "<%= @appdir %>/bin/start-bamboo.sh"
    RETVAL=$?
    echo
    return $RETVAL
  fi
}

function status() {
  pid=$(bamboo_pid)
  if [ -n "${pid}" ]; then
    echo "${SERVICE} is running with pid ${pid}"
  else
    echo "${SERVICE} is not running"
    exit 1
  fi
}

function execute() {
  case "$ACTION" in
    start)
      start
      ;;
    stop)
      stop
      ;;
    status)
      status
      ;;
    restart)
      restart
      ;;
    kill)
      terminate
    ;;
    *)
      echo "Usage: $0 {start|stop|status|kill|restart}"
      exit 1
  esac
}

execute
